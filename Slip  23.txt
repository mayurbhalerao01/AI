Q.1) Write a Program to Implement Tower of Hanoi using Python.


def tower_of_hanoi(n, source_peg, target_peg, auxiliary_peg):
    if n == 1:
        print(f"Move disk 1 from {source_peg} to {target_peg}")
        return
    tower_of_hanoi(n - 1, source_peg, auxiliary_peg, target_peg)
    print(f"Move disk {n} from {source_peg} to {target_peg}")
    tower_of_hanoi(n - 1, auxiliary_peg, target_peg, source_peg)

if __name__ == "__main__":
    number_of_disks = int(input("Enter the number of disks: "))
    tower_of_hanoi(number_of_disks, 'A', 'C', 'B')



Q.2) Write a Python program for the following Cryptarithmetic problems
SEND + MORE = MONEY.


from itertools import permutations
def solve_cryptarithmetic():
    for perm in permutations(range(10), 8):
        s, e, n, d, m, o, r, y = perm
        send = 1000 * s + 100 * e + 10 * n + d
        more = 1000 * m + 100 * o + 10 * r + e
        money = 10000 * m + 1000 * o + 100 * n + 10 * e + y
        if send + more == money:
            return {'S': s, 'E': e, 'N': n, 'D': d, 'M': m, 'O': o, 'R': r, 'Y': y}
    return None
if __name__ == "__main__":
    solution = solve_cryptarithmetic()
    if solution:
        print("Solution found:")
        print(f"  {solution['S']} {solution['E']} {solution['N']} {solution['D']}")
        print(f" +{solution['M']} {solution['O']} {solution['R']} {solution['E']}")
        print(" --------------")
        print(f" {solution['M']} {solution['O']} {solution['N']} {solution['E']} {solution['Y']}")
    else:
        print("No solution found.")
