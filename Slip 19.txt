Q.1) Write a program to implement Hangman game using python.
Description:
Hangman is a classic word-guessing game. The user should guess the word correctly by
entering alphabets of the user choice. The Program will get input as single alphabet from the
user and it will matchmaking with the alphabets in the original word.


import random
def choose_word():
    words = ["python", "hangman", "programming", "computer", "keyboard", "developer", "challenge"]
    return random.choice(words)
def display_word(word, guessed_letters):
    display = ""
    for letter in word:
        if letter in guessed_letters:
            display += letter
        else:
            display += "_"
    return display
def hangman():
    print("Welcome to Hangman!")
    secret_word = choose_word()
    guessed_letters = []
    max_attempts = 6
    attempts = 0 
    while True:
        print(display_word(secret_word, guessed_letters))
        guess = input("Guess a letter: ").lower() 
        if not guess.isalpha() or len(guess) != 1:
            print("Invalid input. Please enter a single alphabet.")
            continue 
       if guess in guessed_letters:
            print("You already guessed that letter. Try again.")
            continue
        guessed_letters.append(guess)
                if guess not in secret_word:
            attempts += 1
            print(f"Incorrect! {max_attempts - attempts} attempts remaining.")
            if attempts == max_attempts:
                print(f"Sorry, you ran out of attempts. The word was: {secret_word}")
                break
        else:
            print("Correct guess!")
if "_" not in display_word(secret_word, guessed_letters):
            print("Congratulations! You guessed the word:", secret_word)
            break
if __name__ == "__main__":
    hangman()



Q.2) Write a Python program to implement A* algorithm. Refer the following graph as an Input for
the program.


